{"version":3,"sources":["components/Stats.js","components/Stopwatch.js","components/Header.js","components/Counter.js","components/Icon.js","components/Player.js","components/AddPlayerForm.js","components/App.js","index.js"],"names":["Stats","props","totalPlayers","players","length","totalPoints","reduce","total","player","score","className","Stopwatch","state","isRunning","elapsedTime","previousTime","tick","now","Date","setState","prevState","handleStopwatch","handleReset","this","intervalID","setInterval","clearInterval","seconds","Math","floor","onClick","Component","Header","title","Counter","index","changeScore","Icon","viewBox","isHighScore","d","transform","width","height","Player","name","id","removePlayer","PureComponent","AddPlayerForm","value","handleValueChange","e","target","handleSubmit","preventDefault","addPlayer","console","log","onSubmit","type","onChange","placeholder","App","prevPlayerId","handleScoreChange","points","getHighScore","scores","map","p","highScore","max","handleAddPlayer","handleRemovePlayer","filter","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b56c6169.chunk.js","sourcesContent":["import React from 'react';\n\nconst Stats = (props) => {\n\n    const totalPlayers = props.players.length;\n    const totalPoints = props.players.reduce( (total, player) => {\n        return total + player.score;\n    }, 0)\n\n    return(\n        <table className=\"stats\">\n            <tbody>\n                <tr>\n                    <td>Players:</td>\n                    <td>{totalPlayers}</td>\n                </tr>\n                <tr>\n                    <td>Total Points:</td>\n                    <td>{totalPoints}</td>\n                </tr>\n            </tbody>\n        </table>\n    );\n};\n\n\nexport default Stats;","import React, { Component } from 'react';\n\nclass Stopwatch extends Component {\n\n    state={\n        isRunning: false,\n        elapsedTime: 0,\n        previousTime: 0\n    }\n\n    componentDidMount() {\n        this.intervalID = setInterval(() => this.tick(), 100);\n    }\n\n    componentWillUnmount(){\n        clearInterval(this.intervalID);\n    }\n\n    tick = () => {\n        if (this.state.isRunning){\n            const now = Date.now();\n            this.setState( prevState => ({\n                previousTime: now,\n                elapsedTime: prevState.elapsedTime + (now - this.state.previousTime)\n            }));\n        }\n    }\n\n    handleStopwatch = () => {\n        this.setState( prevState => ({\n            isRunning: !this.state.isRunning\n        }));\n        if(!this.state.isRunning){\n            this.setState({previousTime: Date.now()})\n        }\n    }\n\n    handleReset = () => {\n        this.setState({ elapsedTime: 0 });\n    }\n\n    render(){\n\n        const seconds = Math.floor(this.state.elapsedTime / 1000);\n\n        return(\n            <div className=\"stopwatch\">\n                <h2>Stopwatch</h2>\n                <span className=\"stopwatch-time\">{seconds}</span>\n                <button onClick={this.handleStopwatch}>\n                    { this.state.isRunning ? 'Stop' : 'Start' }\n                </button>\n                <button onClick={this.handleReset}>Reset</button>\n            </div>\n        );\n    }\n}\n\nexport default Stopwatch;","import React from 'react';\nimport Stats from './Stats';\nimport Stopwatch from './Stopwatch';\n\nconst Header = ({players, title}) => {\n    return(\n        <header>\n            <Stats players={players} />\n            <h1> {title} </h1>\n            <Stopwatch />\n        </header>\n    );\n};\n\n\nexport default Header;","import React from 'react';\nimport PropTypes from 'prop-types';\n\n\n//!Functional Component\n// const Counter = (props) => {\n//     return(\n//         <div className='counter'>\n//             <button className='counter-action decrement'> - </button>\n//             <span className='counter-score'> {props.score} </span>\n//             <button className='counter-action increment'> + </button>\n//         </div>\n//     )\n// }\n\n\nconst Counter = ({index, score, changeScore}) => {\n    return(\n        <div className='counter'>\n            <button className='counter-action decrement' onClick={ () => changeScore(index, -1)} > - </button>\n            <span className='counter-score'> {score} </span>\n            <button className='counter-action increment' onClick={ () => changeScore(index, 1)}> + </button>\n        </div>\n    )\n    \n}\n\nCounter.propTypes = {\n    index: PropTypes.number,\n    score: PropTypes.number,\n    changeScore: PropTypes.func\n}\n\nexport default Counter;","import React from 'react';\n\nconst Icon = (props) => {\n    return(\n    <svg viewBox=\"0 0 44 35\" className={props.isHighScore ? 'is-high-score' : null }>\n        <path d=\"M26.7616 10.6207L21.8192 0L16.9973 10.5603C15.3699 14.1207 10.9096 15.2672 7.77534 12.9741L0 7.24138L6.56986 28.8448H37.0685L43.5781 7.72414L35.7425 13.0948C32.6685 15.2672 28.3288 14.0603 26.7616 10.6207Z\" transform=\"translate(0 0.301727)\"/>\n        <rect width=\"30.4986\" height=\"3.07759\" transform=\"translate(6.56987 31.5603)\"/>\n    </svg>\n    )\n}\n\nexport default Icon;","import React, { PureComponent } from 'react';\nimport Counter from './Counter'\nimport Icon from './Icon';\n\nclass Player extends PureComponent {\n    render(){\n        const { name, id, score, index, removePlayer, changeScore } = this.props; \n        return(\n        <div className='player'>\n            <span className='player-name'>\n                <button className='remove-player' onClick={() => removePlayer(id)}>âœ–</button>\n                <Icon isHighScore={this.props.isHighScore}/>\n                {name}\n            </span>\n            <Counter \n                score={score}\n                changeScore={changeScore}\n                index={index}\n            />\n        </div>\n        )\n    };\n};\n\n\nexport default Player;","import React, { Component } from 'react';\n\nclass AddPlayerForm extends Component {\n\n    state={\n        value: ''\n    };\n\n    handleValueChange = (e) => {\n        this.setState({ value: e.target.value })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.addPlayer(this.state.value);\n        this.setState({ value: ''});\n    }\n\n    render(){\n        console.log(this.state.value)\n        return(\n            <form onSubmit={this.handleSubmit}>\n                <input\n                    type='text'\n                    value={this.state.value}\n                    onChange={this.handleValueChange}\n                    placeholder='Enter Hero Name'\n                />\n                <input\n                    type='submit'\n                    value='Add Hero'\n                />\n            </form>\n        )\n    }\n}\n\n\nexport default AddPlayerForm;","import React, {Component} from 'react';\nimport Header from './Header';\nimport Player from './Player';\nimport AddPlayerForm from './AddPlayerForm';\n\n\n//!Functional Component\n// const Counter = (props) => {\n//     return(\n//         <div className='counter'>\n//             <button className='counter-action decrement'> - </button>\n//             <span className='counter-score'> {props.score} </span>\n//             <button className='counter-action increment'> + </button>\n//         </div>\n//     )\n// }\n\n// getHighScore = () => {\n//     const scores = this.state.players.map( p => p.score);\n//     const highScore = Math.max(...scores);\n//     if (highScore){\n//         return highScore;\n//     }\n//     return null;\n// }\n\n\nclass App extends Component {\n    state = {\n        players: [\n        {\n            name: \"D.VA\",\n            score: 0,\n            id: 1\n        },\n        {\n            name: \"Zenyatta\",\n            score: 0,\n            id: 2\n        },\n        {\n            name: \"Soldier 76\",\n            score: 0,\n            id: 3\n        },\n        {\n            name: \"Sombra\",\n            score: 0,\n            id: 4\n        }\n    ]\n    };\n\n    prevPlayerId = 4;\n\n    handleScoreChange = (index, points) => {\n        this.setState( prevState => {\n            return {\n                score: prevState.players[index].score += points\n            }\n        })\n    }\n\n    getHighScore = () => {\n        const scores = this.state.players.map( p => p.score);\n        const highScore = Math.max(...scores);\n        if (highScore){\n            return highScore;\n        }\n        return null;\n    }\n\n    handleAddPlayer = (name) => {\n        this.setState( prevState => {\n            return {\n                players: [\n                    ...prevState.players,\n                    {\n                       name: name,\n                       score: 0,\n                       id: this.prevPlayerId += 1  \n                    }\n                ]\n            }\n        })\n    }\n\n    handleRemovePlayer = (id) => {\n        this.setState( prevState => {\n            return{\n                players: prevState.players.filter(p => p.id !== id)\n            }\n        })\n    }\n\n    render(){\n\n        const highScore = this.getHighScore;\n\n        return(\n            <div className='scoreboard'>\n                <Header \n                title=\"Scoreboard\" \n                players={this.state.players}\n                />\n\n                {/* List of Players */}\n                {this.state.players.map( (player, index) =>\n                    <Player \n                        id={player.id}\n                        name={player.name}\n                        score={player.score} \n                        key={player.id}\n                        index={index}\n                        changeScore={this.handleScoreChange}\n                        removePlayer={this.handleRemovePlayer}\n                        isHighScore={highScore === player.score}\n                    />\n                )}\n\n                <AddPlayerForm addPlayer={this.handleAddPlayer} />\n            </div>\n        )}\n}\n\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\nimport './index.css';\n\nReactDOM.render(\n  <App />, \n  document.getElementById('root')\n);"],"sourceRoot":""}